<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{e8253e09-22a0-4b08-8086-0685902f0e4c}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>daemon_hue</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <ProjectName>hued</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TargetExt />
    <TargetName>hued</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/libhue/include;/home/pi/projects/hue/;/home/pi/projects/hued/;/home/pi/projects/librpc/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>LINUX;_UNIX;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
    <Link>
      <AdditionalOptions>-pthread %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl;tinyxml2;rpc</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;/home/pi/projects/librpc/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="Daemon.cpp" />
    <ClCompile Include="IniFile.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="Network\Linux\TcpServerLinux.cpp" />
    <ClCompile Include="Network\RpcServer.cpp" />
    <ClCompile Include="PresenceFile.cpp" />
    <ClCompile Include="RpcMethods\TurnOnLights.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Daemon.h" />
    <ClInclude Include="IniFile.h" />
    <ClCompile Include="Network\TcpServer.cpp">
      <FileType>CppHeader</FileType>
    </ClCompile>
    <ClInclude Include="Network\RpcServer.h" />
    <ClInclude Include="Network\TcpServer.h" />
    <ClInclude Include="PresenceFile.h" />
    <ClInclude Include="RpcMethods\TurnOnLights.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>