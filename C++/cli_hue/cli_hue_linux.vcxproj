<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x86">
      <Configuration>Debug</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x86">
      <Configuration>Release</Configuration>
      <Platform>x86</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{0858e663-3c3a-4552-9ddd-45c68d62b2ad}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>cli_hue_linux</RootNamespace>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Generic</TargetLinuxPlatform>
    <ProjectName>hue</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <TargetExt />
    <TargetName>hue</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <PreprocessorDefinitions>;LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <ShowIncludes>true</ShowIncludes>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalOptions>-lz -lrt %(AdditionalOptions)</AdditionalOptions>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions);LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PreprocessorDefinitions>;LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions);LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <ClCompile>
      <PreprocessorDefinitions>;LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <ClCompile>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions);LINUX;LINUX_VS</PreprocessorDefinitions>
      <Verbose>true</Verbose>
      <AdditionalIncludeDirectories>/home/pi/projects/libhue/;/home/pi/projects/hue/;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <IgnoreSpecificDefaultLibraries>
      </IgnoreSpecificDefaultLibraries>
      <VerboseOutput>true</VerboseOutput>
      <AdditionalLibraryDirectories>/home/pi/projects/libhue/bin/ARM/$(ConfigurationName)/;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <LibraryDependencies>hue;jsoncpp;curl</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>sudo cp /home/pi/projects/$(ProjectName)/bin/$(PlatformName)/$(ConfigurationName)/$(ProjectName) /usr/local/bin/$(ProjectName)</Command>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="CommandLineArguments.cpp" />
    <ClCompile Include="HueHelpers.cpp" />
    <ClCompile Include="main.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="Arguments\AllOff.h" />
    <ClInclude Include="Arguments\AllOn.h" />
    <ClInclude Include="Arguments\Command.h" />
    <ClInclude Include="Arguments\Flash.h" />
    <ClInclude Include="Arguments\SetBathroomDay.h" />
    <ClInclude Include="Arguments\SetBathroomNight.h" />
    <ClInclude Include="Arguments\SwitchBathroom.h" />
    <ClInclude Include="CommandLineArguments.h" />
    <ClInclude Include="HueHelpers.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>